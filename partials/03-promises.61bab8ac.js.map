{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEE,MAAOC,EAASC,SAASC,cAAc,SACjCC,EAAoBF,SAASC,cAAc,uBAC3CE,EAAmBH,SAASC,cAAc,sBAC1BD,SAASC,cAAc,wBA6B7C,SAASG,EAAcC,EAAUC,GAEhC,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC7BC,YAAW,KACNN,EACDI,EAAQ,C,SAACN,E,UAAUC,IAEnBM,EAAO,C,SAACP,E,UAAUC,MAEnBD,EAAWC,MAIlBP,EAAOe,iBAAiB,UAzCtB,SAAuBC,GACrBA,EAAMC,iBACN,MAAMC,EAAYd,EAAiBe,MAC7BC,EAAajB,EAAkBgB,MAC/BE,EAASL,EAAMM,cAAcC,SAAS,GAAGJ,MAE/C,IAAK,IAAIK,EAAW,EAAGA,EAAWH,EAAQG,IAExCV,YAAW,IAAMT,EAAcmB,EAAUN,GACxCO,MAAK,EAACnB,SAAEA,EAAQC,UAAEA,MAEjBmB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBtB,EAAY,QAAOC,MAAe,CAE7EsB,QAAU,IAAQvB,EAAWC,OAIhCuB,OAAM,EAACxB,SAAEA,EAAQC,UAAEA,MAClBmB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAoBzB,EAAY,QAAOC,MAAe,CAE5EsB,QAAU,IAAQvB,EAAWC,QAG3Ba","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\n  const  formEl = document.querySelector('.form');\n  const firstDelayInputEl = document.querySelector('input[name=\"delay\"]');\n  const stepDelayInputEl = document.querySelector('input[name=\"step\"]');\n  const amountInputEl = document.querySelector('input[name=\"amount\"]');\n\n  function onSubmitForm (event) {\n    event.preventDefault();\n    const stepDelay = stepDelayInputEl.value;\n    const firstDelay = firstDelayInputEl.value;\n    const amount = event.currentTarget.elements[2].value;\n     \n    for (let position = 0; position < amount; position ++) {\n\n      setTimeout(() => createPromise(position, stepDelay)\n      .then(({ position, stepDelay }) => {\n        \n        Notiflix.Notify.success(`✅ Fulfilled promise ${position+1} in ${stepDelay}ms`,\n        {\n          timeout: (10000 - position * stepDelay), \n        },);\n        // console.log(`✅ Fulfilled promise ${position} in ${stepDelay}ms`);\n        })\n      .catch(({ position, stepDelay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position+1} in ${stepDelay}ms`,\n        {\n          timeout: (10000 - position * stepDelay),\n        },);\n        // console.log(`❌ Rejected promise ${position} in ${stepDelay}ms`);\n        }), firstDelay);\n  } \n  }\n \n  function createPromise(position, stepDelay) {\n    \n   const shouldResolve = Math.random() > 0.3;\n   return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      if(shouldResolve) {\n        resolve({position, stepDelay})\n      } else {\n        reject({position, stepDelay});\n      }\n    }, position * stepDelay);\n   }); \n};\n\nformEl.addEventListener('submit', onSubmitForm);"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$firstDelayInputEl","$47d4ff9957288465$var$stepDelayInputEl","$47d4ff9957288465$var$createPromise","position","stepDelay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","stepDelay1","value","firstDelay","amount","currentTarget","elements","position1","then","$parcel$interopDefault","Notify","success","timeout","catch","failure"],"version":3,"file":"03-promises.61bab8ac.js.map"}