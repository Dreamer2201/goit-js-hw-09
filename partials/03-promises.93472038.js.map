{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAESC,EAASC,SAASC,cAAc,SACjCC,EAAoBF,SAASC,cAAc,uBAC3CE,EAAmBH,SAASC,cAAc,sBAC1BD,SAASC,cAAc,wBA2C/CF,EAAOK,iBAAiB,UAzCtB,SAAuBC,G,kBAQnBC,YAAW,W,OAmBQC,EAnBYC,EAmBFC,EAnBYC,EAqBtCC,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAS,SAACC,EAASC,GAC7BV,YAAW,WACNK,EACDI,EAAQ,CAACR,WAAUE,cAEnBO,EAAO,CAACT,WAAUE,gBAEnBF,EAAWE,OA5BXQ,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUE,EAASS,EAATT,UAEjBU,EAAAtB,GAASuB,OAAOC,QAAQ,uBAA0CC,OAAjBf,EAAS,EAAE,QAAgBe,OAAVb,EAAU,MAC1E,CACAc,QAAU,IAAQhB,EAAWE,OAIhCe,OAAM,SAAAN,G,IAAGX,EAAQW,EAARX,SAAUE,EAASS,EAATT,UAClBU,EAAAtB,GAASuB,OAAOK,QAAQ,sBAAyCH,OAAjBf,EAAS,EAAE,QAAgBe,OAAVb,EAAU,MACzE,CACAc,QAAU,IAAQhB,EAAWE,OAOrC,IAAuBF,EAAUE,EAE1BE,IANGe,IAtBRrB,EAAMsB,iBAKN,IAJA,IAAMjB,EAAYP,EAAiByB,MAC7BF,EAAaxB,EAAkB0B,MAC/BC,EAASxB,EAAMyB,cAAcC,SAAS,GAAGH,MAEtCI,EAAW,EAAGA,EAAWH,EAAQG,IAAWC,EAAAD,M","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\n  const  formEl = document.querySelector('.form');\n  const firstDelayInputEl = document.querySelector('input[name=\"delay\"]');\n  const stepDelayInputEl = document.querySelector('input[name=\"step\"]');\n  const amountInputEl = document.querySelector('input[name=\"amount\"]');\n\n  function onSubmitForm (event) {\n    event.preventDefault();\n    const stepDelay = stepDelayInputEl.value;\n    const firstDelay = firstDelayInputEl.value;\n    const amount = event.currentTarget.elements[2].value;\n     \n    for (let position = 0; position < amount; position ++) {\n\n      setTimeout(() => createPromise(position, stepDelay)\n      .then(({ position, stepDelay }) => {\n        \n        Notiflix.Notify.success(`✅ Fulfilled promise ${position+1} in ${stepDelay}ms`,\n        {\n          timeout: (10000 - position * stepDelay), \n        },);\n        // console.log(`✅ Fulfilled promise ${position} in ${stepDelay}ms`);\n        })\n      .catch(({ position, stepDelay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position+1} in ${stepDelay}ms`,\n        {\n          timeout: (10000 - position * stepDelay),\n        },);\n        // console.log(`❌ Rejected promise ${position} in ${stepDelay}ms`);\n        }), firstDelay);\n  } \n  }\n \n  function createPromise(position, stepDelay) {\n    \n   const shouldResolve = Math.random() > 0.3;\n   return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      if(shouldResolve) {\n        resolve({position, stepDelay})\n      } else {\n        reject({position, stepDelay});\n      }\n    }, position * stepDelay);\n   }); \n};\n\nformEl.addEventListener('submit', onSubmitForm);"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$firstDelayInputEl","$ce04d3a99e08e73b$var$stepDelayInputEl","addEventListener","event","setTimeout","position","position1","stepDelay","stepDelay1","shouldResolve","Math","random","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","timeout","catch","failure","firstDelay","preventDefault","value","amount","currentTarget","elements","position11","_loop"],"version":3,"file":"03-promises.93472038.js.map"}